x-superset-image: &superset-image apachesuperset.docker.scarf.sh/apache/superset:${TAG:-latest-dev}
x-superset-depends-on: &superset-depends-on
 - db
 - redis
x-superset-volumes: &superset-volumes
 - ./docker:/app/docker
 - superset_home:/app/superset_home
 - ../calcite-connector/calcite-rs-jni/py_graphql_sql:/opt/py_graphql_sql

services:
 redis:
   image: redis:7
   container_name: superset_cache
   restart: unless-stopped
   volumes:
     - redis:/data

 db:
   env_file:
     - path: docker/.env
       required: true
     - path: docker/.env-local
       required: false
   image: postgres:15
   container_name: superset_db
   restart: unless-stopped
   volumes:
     - db_home:/var/lib/postgresql/data
     - ./docker/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

 superset:
   env_file:
     - path: docker/.env
       required: true
     - path: docker/.env-local
       required: false
   image: *superset-image
   container_name: superset_app
   command:
     - /bin/bash
     - -c
     - |
       apt-get clean && \
       apt-get update && \
       apt-get install -y openjdk-17-jdk && \
       export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-arm64 && \
       /app/docker/docker-bootstrap.sh app-gunicorn
   user: "root"
   environment:
     - JAVA_HOME=/usr/lib/jvm/java-17-openjdk-arm64
   restart: unless-stopped
   ports:
     - 8088:8088
   depends_on: *superset-depends-on
   volumes: *superset-volumes

 superset-init:
   image: *superset-image
   container_name: superset_init
   command:
     - /bin/bash
     - -c
     - |
       apt-get clean && \
       apt-get update && \
       apt-get install -y openjdk-17-jdk && \
       export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-arm64 && \
       /app/docker/docker-init.sh
   env_file:
     - path: docker/.env
       required: true
     - path: docker/.env-local
       required: false
   environment:
     - JAVA_HOME=/usr/lib/jvm/java-17-openjdk-arm64
   depends_on: *superset-depends-on
   user: "root"
   volumes: *superset-volumes
   healthcheck:
     disable: true

 superset-worker:
   image: *superset-image
   container_name: superset_worker
   command:
     - /bin/bash
     - -c
     - |
       apt-get clean && \
       apt-get update && \
       apt-get install -y openjdk-17-jdk && \
       export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-arm64 && \
       /app/docker/docker-bootstrap.sh worker
   env_file:
     - path: docker/.env
       required: true
     - path: docker/.env-local
       required: false
   environment:
     - JAVA_HOME=/usr/lib/jvm/java-17-openjdk-arm64
   restart: unless-stopped
   depends_on: *superset-depends-on
   user: "root"
   volumes: *superset-volumes
   healthcheck:
     test:
       [
         "CMD-SHELL",
         "celery -A superset.tasks.celery_app:app inspect ping -d celery@$$HOSTNAME",
       ]

 superset-worker-beat:
   image: *superset-image
   container_name: superset_worker_beat
   command:
     - /bin/bash
     - -c
     - |
       apt-get clean && \
       apt-get update && \
       apt-get install -y openjdk-17-jdk && \
       export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-arm64 && \
       /app/docker/docker-bootstrap.sh beat
   env_file:
     - path: docker/.env
       required: true
     - path: docker/.env-local
       required: false
   environment:
     - JAVA_HOME=/usr/lib/jvm/java-17-openjdk-arm64
   restart: unless-stopped
   depends_on: *superset-depends-on
   user: "root"
   volumes: *superset-volumes
   healthcheck:
     disable: true

volumes:
 superset_home:
   external: false
 db_home:
   external: false
 redis:
   external: false
